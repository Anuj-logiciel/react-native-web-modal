{"version":3,"sources":["../src/index.js"],"names":["ANIMATION_DEFINITIONS","makeAnimation","name","obj","isObject","ReactNativeModal","props","buildAnimations","state","isSwipeable","pan","Animated","ValueXY","buildPanResponder","isVisible","showContent","nextProps","setState","animationIn","animationOut","backdropOpacity","backdropRef","transitionTo","opacity","backdropTransitionInTiming","open","prevProps","_close","animationInTiming","animationOutTiming","avoidKeyboard","backdropColor","backdropTransitionOutTiming","children","onModalShow","onBackdropPress","onBackButtonPress","useNativeDriver","style","otherProps","deviceWidth","deviceHeight","computedStyle","margin","transform","translateY","styles","content","panHandlers","panPosition","panResponder","getLayout","_children","hideModalContentWhileAnimating","containerView","ref","contentRef","backdrop","backgroundColor","width","height","OS","concat","Component","propTypes","PropTypes","oneOfType","string","shape","number","bool","node","isRequired","func","onModalHide","onSwipe","swipeThreshold","swipeDirection","oneOf","any","scrollTo","scrollOffset","scrollOffsetMax","defaultProps","Dimensions","get","transitionLock","inSwipeClosingState","animEvt","event","dx","x","dy","y","PanResponder","create","onStartShouldSetPanResponder","onPanResponderMove","evt","gestureState","accDistance","getAccDistancePerDirection","newOpacityFactor","isSwipeDirectionAllowed","offsetY","animated","onPanResponderRelease","spring","toValue","bounciness","start","animationName","handleDimensionsUpdate","setValue","then"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * MIT License\n * Copyright (c) 2017 React Native Community\n * https://github.com/react-native-community/react-native-modal\n */\n\nimport React, { Component } from 'react';\nimport {\n  Dimensions,\n  TouchableWithoutFeedback,\n  KeyboardAvoidingView,\n  Platform,\n  PanResponder,\n  Animated,\n} from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport {\n  View,\n  initializeRegistryWithDefinitions,\n  registerAnimation,\n  createAnimation,\n} from 'react-native-animatable';\nimport Modal from 'rn-web-modal';\n\nimport * as ANIMATION_DEFINITIONS from './animations';\n\nimport styles from './styles';\n\n// Override default animations\ninitializeRegistryWithDefinitions(ANIMATION_DEFINITIONS);\n\n// Utility for creating custom animations\nconst makeAnimation = (name, obj) => {\n  registerAnimation(name, createAnimation(obj));\n};\n\nconst isObject = (obj) => obj !== null && typeof obj === 'object';\n\nexport class ReactNativeModal extends Component {\n  static propTypes = {\n    animationIn: PropTypes.oneOfType([PropTypes.string, PropTypes.shape]),\n    animationInTiming: PropTypes.number,\n    animationOut: PropTypes.oneOfType([PropTypes.string, PropTypes.shape]),\n    animationOutTiming: PropTypes.number,\n    avoidKeyboard: PropTypes.bool,\n    backdropColor: PropTypes.string,\n    backdropOpacity: PropTypes.number,\n    backdropTransitionInTiming: PropTypes.number,\n    backdropTransitionOutTiming: PropTypes.number,\n    children: PropTypes.node.isRequired,\n    isVisible: PropTypes.bool.isRequired,\n    hideModalContentWhileAnimating: PropTypes.bool,\n    onModalShow: PropTypes.func,\n    onModalHide: PropTypes.func,\n    onBackButtonPress: PropTypes.func,\n    onBackdropPress: PropTypes.func,\n    onSwipe: PropTypes.func,\n    swipeThreshold: PropTypes.number,\n    swipeDirection: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n    useNativeDriver: PropTypes.bool,\n    style: PropTypes.any,\n    scrollTo: PropTypes.func,\n    scrollOffset: PropTypes.number,\n    scrollOffsetMax: PropTypes.number,\n  };\n\n  static defaultProps = {\n    animationIn: 'slideInUp',\n    animationInTiming: 300,\n    animationOut: 'slideOutDown',\n    animationOutTiming: 300,\n    avoidKeyboard: false,\n    backdropColor: 'black',\n    backdropOpacity: 0.7,\n    backdropTransitionInTiming: 300,\n    backdropTransitionOutTiming: 300,\n    onModalShow: () => null,\n    onModalHide: () => null,\n    isVisible: false,\n    hideModalContentWhileAnimating: false,\n    onBackdropPress: () => null,\n    onBackButtonPress: () => null,\n    swipeThreshold: 100,\n    useNativeDriver: false,\n    scrollTo: null,\n    scrollOffset: 0,\n    scrollOffsetMax: 0,\n  };\n\n  // We use an internal state for keeping track of the modal visibility: this allows us to keep\n  // the modal visibile during the exit animation, even if the user has already change the\n  // isVisible prop to false.\n  // We store in the state the device width and height so that we can update the modal on\n  // device rotation.\n  state = {\n    showContent: true,\n    isVisible: false,\n    deviceWidth: Dimensions.get('window').width,\n    deviceHeight: Dimensions.get('window').height,\n    isSwipeable: !!this.props.swipeDirection,\n    pan: null,\n  };\n\n  transitionLock = null;\n\n  inSwipeClosingState = false;\n\n  constructor(props) {\n    super(props);\n    this.buildAnimations(props);\n    if (this.state.isSwipeable) {\n      this.state = { ...this.state, pan: new Animated.ValueXY() };\n      this.buildPanResponder();\n    }\n    if (this.props.isVisible) {\n      this.state = {\n        ...this.state,\n        isVisible: true,\n        showContent: true,\n      };\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.state.isVisible && nextProps.isVisible) {\n      this.setState({ isVisible: true, showContent: true });\n    }\n    if (\n      this.props.animationIn !== nextProps.animationIn ||\n      this.props.animationOut !== nextProps.animationOut\n    ) {\n      this.buildAnimations(nextProps);\n    }\n    if (\n      this.props.backdropOpacity !== nextProps.backdropOpacity &&\n      this.backdropRef\n    ) {\n      this.backdropRef.transitionTo(\n        { opacity: nextProps.backdropOpacity },\n        this.props.backdropTransitionInTiming\n      );\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.isVisible) {\n      this.open();\n    }\n    // window.addEventListener(\n    //   'resize',\n    //   this.handleDimensionsUpdate\n    // );\n  }\n\n  componentWillUnmount() {\n    // window.removeEventListener(\n    //   'resize',\n    //   this.handleDimensionsUpdate\n    // );\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // On modal open request, we slide the view up and fade in the backdrop\n    if (this.props.isVisible && !prevProps.isVisible) {\n      this.open();\n    } else if (!this.props.isVisible && prevProps.isVisible) {\n      // On modal close request, we slide the view down and fade out the backdrop\n      this._close();\n    }\n  }\n\n  buildPanResponder = () => {\n    let animEvt = null;\n\n    if (\n      this.props.swipeDirection === 'right' ||\n      this.props.swipeDirection === 'left'\n    ) {\n      animEvt = Animated.event([null, { dx: this.state.pan.x }]);\n    } else {\n      animEvt = Animated.event([null, { dy: this.state.pan.y }]);\n    }\n\n    this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => {\n        if (this.props.scrollTo) {\n          if (this.props.scrollOffset > 0) {\n            return false; // user needs to be able to scroll content back up\n          }\n        }\n        return true;\n      },\n      onPanResponderMove: (evt, gestureState) => {\n        // Dim the background while swiping the modal\n        const accDistance = this.getAccDistancePerDirection(gestureState);\n        const newOpacityFactor = 1 - accDistance / this.state.deviceWidth;\n        if (this.isSwipeDirectionAllowed(gestureState)) {\n          this.backdropRef &&\n            this.backdropRef.transitionTo({\n              opacity: this.props.backdropOpacity * newOpacityFactor,\n            });\n          animEvt(evt, gestureState);\n        } else if (this.props.scrollTo) {\n          let offsetY = -gestureState.dy;\n          if (offsetY > this.props.scrollOffsetMax) {\n            offsetY -= (offsetY - this.props.scrollOffsetMax) / 2;\n          }\n          this.props.scrollTo({ y: offsetY, animated: false });\n        }\n      },\n      onPanResponderRelease: (evt, gestureState) => {\n        // Call the onSwipe prop if the threshold has been exceeded\n        const accDistance = this.getAccDistancePerDirection(gestureState);\n        if (accDistance > this.props.swipeThreshold) {\n          if (this.props.onSwipe) {\n            this.inSwipeClosingState = true;\n            this.props.onSwipe();\n            return;\n          }\n        }\n        // Reset backdrop opacity and modal position\n        if (this.backdropRef) {\n          this.backdropRef.transitionTo(\n            { opacity: this.props.backdropOpacity },\n            this.props.backdropTransitionInTiming\n          );\n        }\n        Animated.spring(this.state.pan, {\n          toValue: { x: 0, y: 0 },\n          bounciness: 0,\n        }).start();\n        if (this.props.scrollOffset > this.props.scrollOffsetMax) {\n          this.props.scrollTo({\n            y: this.props.scrollOffsetMax,\n            animated: true,\n          });\n        }\n      },\n    });\n  };\n\n  getAccDistancePerDirection = (gestureState) => {\n    switch (this.props.swipeDirection) {\n      case 'up':\n        return -gestureState.dy;\n      case 'down':\n        return gestureState.dy;\n      case 'right':\n        return gestureState.dx;\n      case 'left':\n        return -gestureState.dx;\n      default:\n        return 0;\n    }\n  };\n\n  isSwipeDirectionAllowed = ({ dy, dx }) => {\n    const draggedDown = dy > 0;\n    const draggedUp = dy < 0;\n    const draggedLeft = dx < 0;\n    const draggedRight = dx > 0;\n\n    if (this.props.swipeDirection === 'up' && draggedUp) {\n      return true;\n    }\n    if (this.props.swipeDirection === 'down' && draggedDown) {\n      return true;\n    }\n    if (this.props.swipeDirection === 'right' && draggedRight) {\n      return true;\n    }\n    if (this.props.swipeDirection === 'left' && draggedLeft) {\n      return true;\n    }\n    return false;\n  };\n\n  // User can define custom react-native-animatable animations, see PR #72\n  buildAnimations = (props) => {\n    let animationIn = props.animationIn;\n    let animationOut = props.animationOut;\n\n    if (isObject(animationIn)) {\n      const animationName = JSON.stringify(animationIn);\n      makeAnimation(animationName, animationIn);\n      animationIn = animationName;\n    }\n\n    if (isObject(animationOut)) {\n      const animationName = JSON.stringify(animationOut);\n      makeAnimation(animationName, animationOut);\n      animationOut = animationName;\n    }\n\n    this.animationIn = animationIn;\n    this.animationOut = animationOut;\n  };\n\n  handleDimensionsUpdate = () => {\n    // Here we update the device dimensions in the state if the layout changed (triggering a render)\n    const deviceWidth = Dimensions.get('window').width;\n    const deviceHeight = Dimensions.get('window').height;\n    if (\n      deviceWidth !== this.state.deviceWidth ||\n      deviceHeight !== this.state.deviceHeight\n    ) {\n      this.setState({ deviceWidth, deviceHeight });\n    }\n  };\n\n  open = () => {\n    if (this.transitionLock) return;\n    this.transitionLock = true;\n    if (this.backdropRef) {\n      this.backdropRef.transitionTo(\n        { opacity: this.props.backdropOpacity },\n        this.props.backdropTransitionInTiming\n      );\n    }\n\n    // This is for reset the pan position, if not modal get stuck\n    // at the last release position when you try to open it.\n    // Could certainly be improve - no idea for the moment.\n    if (this.state.isSwipeable) {\n      this.state.pan.setValue({ x: 0, y: 0 });\n    }\n\n    if (this.contentRef) {\n      this.contentRef[this.animationIn](this.props.animationInTiming).then(\n        () => {\n          this.transitionLock = false;\n          if (!this.props.isVisible) {\n            this._close();\n          } else {\n            this.props.onModalShow();\n          }\n        }\n      );\n    }\n  };\n\n  _close = () => {\n    if (this.transitionLock) return;\n    this.transitionLock = true;\n    if (this.backdropRef) {\n      this.backdropRef.transitionTo(\n        { opacity: 0 },\n        this.props.backdropTransitionOutTiming\n      );\n    }\n\n    let animationOut = this.animationOut;\n\n    if (this.inSwipeClosingState) {\n      this.inSwipeClosingState = false;\n      if (this.props.swipeDirection === 'up') {\n        animationOut = 'slideOutUp';\n      } else if (this.props.swipeDirection === 'down') {\n        animationOut = 'slideOutDown';\n      } else if (this.props.swipeDirection === 'right') {\n        animationOut = 'slideOutRight';\n      } else if (this.props.swipeDirection === 'left') {\n        animationOut = 'slideOutLeft';\n      }\n    }\n\n    if (this.contentRef) {\n      this.contentRef[animationOut](this.props.animationOutTiming).then(() => {\n        this.transitionLock = false;\n        if (this.props.isVisible) {\n          this.open();\n        } else {\n          this.setState(\n            {\n              showContent: false,\n            },\n            () => {\n              this.setState({\n                isVisible: false,\n              });\n            }\n          );\n          this.props.onModalHide();\n        }\n      });\n    }\n  };\n\n  render() {\n    const {\n      animationIn,\n      animationInTiming,\n      animationOut,\n      animationOutTiming,\n      avoidKeyboard,\n      backdropColor,\n      backdropOpacity,\n      backdropTransitionInTiming,\n      backdropTransitionOutTiming,\n      children,\n      isVisible,\n      onModalShow,\n      onBackdropPress,\n      onBackButtonPress,\n      useNativeDriver,\n      style,\n      ...otherProps\n    } = this.props;\n    const { deviceWidth, deviceHeight } = this.state;\n\n    const computedStyle = [\n      { margin: deviceWidth * 0.05, transform: [{ translateY: 0 }] },\n      styles.content,\n      style,\n    ];\n\n    let panHandlers = {};\n    let panPosition = {};\n    if (this.state.isSwipeable) {\n      panHandlers = { ...this.panResponder.panHandlers };\n      panPosition = this.state.pan.getLayout();\n    }\n\n    const _children =\n      this.props.hideModalContentWhileAnimating &&\n      this.props.useNativeDriver &&\n      !this.state.showContent ? (\n          <View />\n        ) : (\n          children\n        );\n    const containerView = (\n      <View\n        {...panHandlers}\n        ref={(ref) => (this.contentRef = ref)}\n        style={[panPosition, computedStyle]}\n        pointerEvents=\"box-none\"\n        useNativeDriver={useNativeDriver}\n        {...otherProps}\n      >\n        {_children}\n      </View>\n    );\n\n    return (\n      <Modal\n        transparent\n        animationType=\"none\"\n        visible={this.state.isVisible}\n        onRequestClose={onBackButtonPress}\n        {...otherProps}\n      >\n        <TouchableWithoutFeedback onPress={onBackdropPress}>\n          <View\n            ref={(ref) => (this.backdropRef = ref)}\n            useNativeDriver={useNativeDriver}\n            style={[\n              styles.backdrop,\n              {\n                backgroundColor: this.state.showContent\n                  ? backdropColor\n                  : 'transparent',\n                width: deviceWidth,\n                height: deviceHeight,\n              },\n            ]}\n          />\n        </TouchableWithoutFeedback>\n\n        {avoidKeyboard && (\n          <KeyboardAvoidingView\n            behavior={Platform.OS === 'ios' ? 'padding' : null}\n            pointerEvents=\"box-none\"\n            style={computedStyle.concat([{ margin: 0 }])}\n          >\n            {containerView}\n          </KeyboardAvoidingView>\n        )}\n\n        {!avoidKeyboard && containerView}\n      </Modal>\n    );\n  }\n}\n\nexport default ReactNativeModal;\n"]}